name: master-latest

on:
  push:
    branches: [ master ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # We use buildx instead of regular build so we can take advantage of Docker layer cache via GithubActions' cache
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Setup the Github Actions cache.
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildxarch-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildxarch-

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_GITHUB_USERNAME }}
          password: ${{ secrets.DOCKER_GITHUB_PAT }}


      - name: Prepare
        id: prep
        run: |
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.multiarch
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/rpardini/nfs-subdir-external-provisioner:latest
          build-args: |
            APP_FOLDER=/go/src/github.com/${{ github.repository }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          cache-from: type=local,src=/tmp/.buildx-cache/release
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/release

      - name: Configure Git for Helm release
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # @TODO: unneeded? but see below
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      # @TODO: this only works on tags, or something, who knows.
      # @TODO: either solve or remove, since the Docker image build above is "good enough"
      # @TODO: yamls can be produced by helm template, could be a decent idea to have a single-yaml deployment to my needs
      - name: Run chart-releaser for Helm release
        uses: helm/chart-releaser-action@v1.1.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
